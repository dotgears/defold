#! /usr/bin/env python

VERSION='0.1'
APPNAME='tools'

srcdir = '.'
blddir = 'build'

import sys, re
import waf_dynamo, waf_ddf
from BuildUtility import create_build_utility

def init():
    pass

def set_options(opt):
    opt.tool_options('waf_dynamo')

def configure(conf):
    conf.check_tool('waf_dynamo')

    try:
        build_util = create_build_utility(conf.env)
    except BuildUtilityException as ex:
        conf.fatal(ex.msg)

    waf_ddf.configure(conf)

    conf.sub_config('src')

    platform = conf.env['PLATFORM']

    if platform == "darwin" or platform == "x86_64-darwin":
        conf.env.append_value('LINKFLAGS', ['-framework', 'Cocoa', '-framework', 'OpenGL', '-framework', 'AGL', '-framework', 'IOKit', '-framework', 'Carbon', '-framework', 'CoreVideo', '-framework', 'QuartzCore'])
    elif platform == "armv7-darwin" or platform == 'x86_64-ios':
        pass
    elif platform == "linux" or platform == "x86_64-linux":
        conf.env['LIB_X'] = ['Xext', 'X11', 'Xi', 'GL', 'GLU']
    elif "win32" in platform:
        conf.env.append_value('LINKFLAGS', ['opengl32.lib', 'user32.lib', 'shell32.lib', 'xinput9_1_0.lib'])
    elif re.match('arm.*?android', platform):
        conf.env.append_value('LINKFLAGS', ['-lEGL', '-lGLESv1_CM', '-lGLESv2', '-landroid'])

    conf.env.append_value('CPPPATH', "default/src")
    conf.env['STATICLIB_DLIB'] = ['dlib', 'mbedtls']
    conf.env['STATICLIB_DDF'] = 'ddf'
    conf.env['STATICLIB_HID'] = 'hid'
    conf.env['STATICLIB_INPUT'] = 'input'
    conf.env['STATICLIB_DMGLFW'] = 'dmglfw'
    conf.env['STATICLIB_GRAPHICS'] = 'graphics'
    conf.env['STATICLIB_GRAPHICS_VULKAN'] = ['graphics_vulkan']
    if platform == "x86_64-darwin":
        conf.env['STATICLIB_GRAPHICS_VULKAN'] += ['MoltenVK']

    conf.env.append_unique('CCDEFINES', 'DLIB_LOG_DOMAIN="TOOLS"')
    conf.env.append_unique('CXXDEFINES', 'DLIB_LOG_DOMAIN="TOOLS"')

    sha1 = build_util.git_sha1()
    conf.env.append_unique('CCDEFINES', 'DEFOLD_SHA1="%s"' % sha1)
    conf.env.append_unique('CXXDEFINES', 'DEFOLD_SHA1="%s"' % sha1)

def build(bld):
    bld.add_subdirs('scripts')
    bld.add_subdirs('src')

def shutdown():
    waf_dynamo.run_tests(valgrind = True)
