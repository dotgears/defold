#! /usr/bin/env python

VERSION='0.1'
APPNAME='gui'

srcdir = '.'
blddir = 'build'

import sys, re
import waf_dynamo, waf_ddf

def init():
    pass

def set_options(opt):
    opt.tool_options('waf_dynamo')

def configure(conf):
    conf.check_tool('waf_dynamo')

    waf_ddf.configure(conf)

    conf.sub_config('src')

    conf.env.append_value('CPPPATH', "default/src")
    conf.env['STATICLIB_DLIB'] = ['dlib', 'mbedtls']
    conf.env['STATICLIB_DDF'] = 'ddf'
    conf.env['STATICLIB_PARTICLE'] = 'particle'
    conf.env['STATICLIB_RIG'] = 'rig'
    conf.env['STATICLIB_HID'] = 'hid'
    conf.env['STATICLIB_HID_NULL'] = 'hid_null'
    conf.env['STATICLIB_DMGLFW'] = 'dmglfw'
    conf.env['STATICLIB_SCRIPT'] = 'script'
    conf.env['STATICLIB_RESOURCE'] = 'resource'
    conf.env['STATICLIB_EXTENSION'] = 'extension'

    platform = conf.env['PLATFORM']

    if platform == "darwin" or platform == "x86_64-darwin":
        conf.env.append_value('LINKFLAGS', ['-framework', 'Cocoa', '-framework', 'OpenGL', '-framework', 'AGL', '-framework', 'IOKit', '-framework', 'CoreVideo'])
    if re.match('arm.*?darwin', platform) or platform == 'x86_64-ios':
        conf.env.append_value('LINKFLAGS', ['-framework', 'UIKit', '-framework', 'OpenGLES', '-framework', 'QuartzCore', '-framework', 'CoreGraphics'])
    if platform == "linux" or platform == "x86_64-linux":
        conf.env['LIB_X'] = ['Xext', 'X11', 'Xi', 'GL', 'GLU']
    if 'win32' in platform:
        conf.env.append_value('LINKFLAGS', ['opengl32.lib', 'glu32.lib', 'user32.lib', 'shell32.lib', 'xinput9_1_0.lib'])

    conf.env.append_unique('CCDEFINES', 'DLIB_LOG_DOMAIN="GUI"')
    conf.env.append_unique('CXXDEFINES', 'DLIB_LOG_DOMAIN="GUI"')

def build(bld):
    bld.add_subdirs('src')

def shutdown():
    waf_dynamo.run_tests(valgrind = True)

