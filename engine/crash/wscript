#! /usr/bin/env python

VERSION='0.1'
APPNAME='crash'

srcdir = '.'
blddir = 'build'

import sys, re, os
import waf_dynamo, waf_ddf
from BuildUtility import BuildUtility, BuildUtilityException, create_build_utility

def init():
    pass

def set_options(opt):
    opt.tool_options('waf_dynamo')
    opt.tool_options('waf_ddf')

def configure(conf):
    conf.check_tool('waf_dynamo')
    conf.check_tool('waf_ddf')
    waf_ddf.configure(conf)

    build_util = None
    try:
        build_util = create_build_utility(conf.env)
    except BuildUtilityException as ex:
        conf.fatal(ex.msg)
    operating_sys = build_util.get_target_os()

    conf.sub_config('src')

    conf.env.append_value('CPPPATH', "default/src")

    conf.env['STATICLIB_DLIB'] = ['dlib', 'mbedtls']
    conf.env['STATICLIB_DDF'] = 'ddf'
    conf.env['STATICLIB_RESOURCE'] = 'resource'
    conf.env['STATICLIB_EXTENSION'] = 'extension'
    conf.env['STATICLIB_SCRIPT'] = 'script'

    if operating_sys != "osx":
        conf.env['STATICLIB_UNWIND'] = 'unwind'

    conf.env.append_unique('CCDEFINES', 'DLIB_LOG_DOMAIN="CRASH"')
    conf.env.append_unique('CXXDEFINES', 'DLIB_LOG_DOMAIN="CRASH"')

    if operating_sys == "win":
        conf.env.append_value('LINKFLAGS', ['dbghelp.lib'])

def build(bld):
    bld.add_subdirs('src')

def shutdown():
    waf_dynamo.run_tests(valgrind = True)
