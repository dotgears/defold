#! /usr/bin/env python

VERSION='0.1'
APPNAME='script'

srcdir = '.'
blddir = 'build'

import sys, os
import waf_dynamo, waf_ddf
import Options

def init():
    pass

def set_options(opt):
    opt.tool_options('waf_dynamo')

def configure(conf):
    conf.check_tool('waf_dynamo')
    conf.check_tool('waf_ddf')

    waf_ddf.configure(conf)

    conf.sub_config('src')

    conf.env.append_value('CPPPATH', "default/src")
    conf.env['STATICLIB_DLIB'] = ['dlib', 'mbedtls']
    conf.env['STATICLIB_DDF'] = 'ddf'
    conf.env['STATICLIB_RESOURCE'] = 'resource'
    conf.env['STATICLIB_EXTENSION'] = 'extension'

    conf.env.append_unique('CCDEFINES', 'DLIB_LOG_DOMAIN="SCRIPT"')
    conf.env.append_unique('CXXDEFINES', 'DLIB_LOG_DOMAIN="SCRIPT"')

def build(bld):
    python_path = os.environ.get('PYTHONPATH', '')
    os.environ['PYTHONPATH'] = os.path.abspath('build/default/src/script') + os.pathsep + python_path
    bld.add_subdirs('src')

def shutdown():
    if not Options.commands['build']:
        return

    # We need to add default/src/ddf to PYTHONPATH here. (ddf_extensions_pb2.py and plugin_pb2.py)
    # Only required 'in' ddf-lib.

    os.environ['DM_SAVEGAME_HOME'] = 'build'
    sys.path.append('.')

    import server

    serv = None
    if not getattr(Options.options, 'skip_tests', False):
        serv = server.Server()
        serv.start()
    try:
        waf_dynamo.run_tests(valgrind = True)
    finally:
        if serv:
            serv.stop()
