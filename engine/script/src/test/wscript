#! /usr/bin/env python

import Task, TaskGen
from TaskGen import extension, declare_extension
from waf_dynamo import new_copy_task

new_copy_task('luascript', '.lua', '.luac')
new_copy_task('save_file', '.sav', '.savc')

def build(bld):
    flist = 'cxx cprogram test'
    if 'web' in bld.env['PLATFORM']:
        lib_dirs = {}
        lib_dirs['library_script.js'] = '../lib/js'
        bld.env['JS_LIB_PATHS'] = lib_dirs

    web_libs = ['library_sys.js', 'library_script.js']
    libs = 'PLATFORM_SOCKET THREAD EXTENSION RESOURCE DDF DLIB LUA CARES'

    test_script_ddf = bld.new_task_gen(features = flist,
                                        includes = '..',
                                        uselib = libs,
                                        uselib_local = 'script',
                                        web_libs = web_libs,
                                        proto_gen_py = True,
                                        target = 'test_script_ddf',
                                        source = 'test_script_ddf.cpp test_ddf.proto')

    test_script_ddf.install_path = None

    test_script_msg = bld.new_task_gen(features = flist,
                                        includes = '..',
                                        uselib = libs,
                                        uselib_local = 'script',
                                        web_libs = web_libs,
                                        proto_gen_py = True,
                                        target = 'test_script_msg',
                                        source = 'test_script_msg.cpp test_ddf.proto')

    test_script_msg.install_path = None

    test_script_hash = bld.new_task_gen(features = flist,
                                        includes = '..',
                                        uselib = libs,
                                        uselib_local = 'script',
                                        web_libs = web_libs,
                                        proto_gen_py = True,
                                        target = 'test_script_hash',
                                        source = 'test_script_hash.cpp test_hash.lua')

    test_script_hash.install_path = None

    test_script_vmath = bld.new_task_gen(features = flist,
                                     includes = '.. .',
                                     uselib = libs,
                                     uselib_local = 'script',
                                     web_libs = web_libs,
                                     proto_gen_py = True,
                                     target = 'test_script_vmath',
                                     source = 'test_script_vmath.cpp test_number.lua test_vector.lua test_vector3.lua test_vector4.lua test_quat.lua test_matrix4.lua')

    test_script_vmath.install_path = None

    script_table_features = flist + ' embed';
    test_script_table = bld.new_task_gen(features = script_table_features,
                                     includes = '.. .',
                                     uselib = libs,
                                     uselib_local = 'script',
                                     web_libs = web_libs,
                                     proto_gen_py = True,
                                     embed_source = 'data/table_cos_v0.dat data/table_sin_v0.dat data/table_cos_v1.dat data/table_sin_v1.dat data/table_v818192.dat data/table_tstring_v1.dat data/table_tstring_v2.dat',
                                     target = 'test_script_table',
                                     source = 'test_script_table.cpp test_script_table.lua')

    test_script_table.install_path = None

    test_script_table_log = bld.new_task_gen(features = flist,
                                     includes = '.. .',
                                     uselib = libs,
                                     uselib_local = 'script',
                                     web_libs = web_libs,
                                     proto_gen_py = True,
                                     target = 'test_script_table_log',
                                     source = 'test_script_table_log.cpp')

    test_script_table_log.install_path = None

    test_script_timer = bld.new_task_gen(features = flist,
                                     includes = '.. .',
                                     uselib = libs,
                                     uselib_local = 'script',
                                     web_libs = web_libs,
                                     proto_gen_py = True,
                                     target = 'test_script_timer',
                                     source = 'test_script_timer.cpp')

    test_script_timer.install_path = None

    test_script_sys = bld.new_task_gen(features = flist,
                                       includes = '..',
                                       uselib = libs,
                                       uselib_local = 'script',
                                       web_libs = web_libs,
                                       proto_gen_py = True,
                                       target = 'test_script_sys',
                                       source = 'test_script_sys.cpp test_sys.lua')

    test_script_sys.install_path = None

    test_script = bld.new_task_gen(features = flist,
                                        includes = '..',
                                        uselib = libs,
                                        uselib_local = 'script',
                                        web_libs = web_libs,
                                        proto_gen_py = True,
                                        target = 'test_script',
                                        source = 'test_script.cpp test_script.lua test_script_coroutine.lua test_circular_ref_pprint.lua test_pprint_truncate.lua')

    test_script.install_path = None

    test_script_module = bld.new_task_gen(features = flist,
                                          includes = '..',
                                          uselib = libs,
                                          uselib_local = 'script',
                                          web_libs = web_libs,
                                          proto_gen_py = True,
                                          target = 'test_script_module',
                                          source = 'test_script_module.cpp test_module.lua test_module_missing.lua')

    test_script_module.install_path = None

    test_script_json = bld.new_task_gen(features = flist,
                                       includes = '..',
                                       uselib = libs,
                                       uselib_local = 'script',
                                       web_libs = web_libs,
                                       proto_gen_py = True,
                                       target = 'test_script_json',
                                       source = 'test_script_json.cpp test_json.lua')

    test_script_json.install_path = None

    if not 'web' in bld.env['PLATFORM']:
        test_script_http = bld.new_task_gen(features = flist,
                                           includes = '..',
                                           uselib = libs,
                                           uselib_local = 'script',
                                           web_libs = web_libs,
                                           proto_gen_py = True,
                                           target = 'test_script_http',
                                           source = 'test_script_http.cpp test_http.lua test_http_timeout.lua')

        test_script_http.install_path = None

    test_script_zlib = bld.new_task_gen(features = flist,
                                       includes = '..',
                                       uselib = libs,
                                       uselib_local = 'script',
                                       web_libs = web_libs,
                                       proto_gen_py = True,
                                       target = 'test_script_zlib',
                                       source = 'test_script_zlib.cpp test_zlib.lua')

    test_script_zlib.install_path = None

    test_script_image = bld.new_task_gen(features = flist,
                                       includes = '..',
                                       uselib = libs,
                                       uselib_local = 'script',
                                       web_libs = web_libs,
                                       proto_gen_py = True,
                                       target = 'test_script_image',
                                       source = 'test_script_image.cpp test_image.lua')

    test_script_image.install_path = None

    test_script_user_type = bld.new_task_gen(features = flist,
                                       includes = '..',
                                       uselib = libs,
                                       uselib_local = 'script',
                                       web_libs = web_libs,
                                       proto_gen_py = True,
                                       target = 'test_script_user_type',
                                       source = 'test_script_user_type.cpp')

    test_script_user_type.install_path = None

    test_script_luasocket = bld.new_task_gen(features = flist,
                                       includes = '..',
                                       uselib = libs,
                                       uselib_local = 'script',
                                       web_libs = web_libs,
                                       proto_gen_py = True,
                                       target = 'test_script_luasocket',
                                       source = 'test_script_luasocket.cpp test_luasocket.lua')

    test_script_luasocket.install_path = None

    test_script_bitop = bld.new_task_gen(features = flist,
                                       includes = '..',
                                       uselib = libs,
                                       uselib_local = 'script',
                                       web_libs = web_libs,
                                       proto_gen_py = True,
                                       target = 'test_script_bitop',
                                       source = 'test_script_bitop.cpp test_bitop.lua')

    test_script_bitop.install_path = None

