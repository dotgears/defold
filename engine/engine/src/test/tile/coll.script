function init(self)

    local res, tile, group

    -- get_bounds
    x, y, w, h = tilemap.get_bounds("#tilemap")
    assert(x == -1)
    assert(y == 0)
    assert(w == 3)
    assert(h == 2)

    -- get_tile
    tile = tilemap.get_tile("#tilemap", "layer", -1, 0)
    assert(tile == 1)
    tile = tilemap.get_tile("#tilemap", "layer", 0, 0)
    assert(tile == 0)
    tile = tilemap.get_tile("#tilemap", "layer", 1, 0)
    assert(tile == 0)

    tile = tilemap.get_tile("#tilemap", "layer", -1, 1)
    assert(tile == 0)
    tile = tilemap.get_tile("#tilemap", "layer", 0, 1)
    assert(tile == 0)
    tile = tilemap.get_tile("#tilemap", "layer", 1, 1)
    assert(tile == 1)

    -- out of range
    tile = tilemap.get_tile("#tilemap", "layer", 2, 1)
    assert(tile == nil)

    -- set_tile
    -- Ok
    res = tilemap.set_tile("#tilemap", "layer", 1, 1, 0)
    assert(res == true)
    -- Flips
    res = tilemap.set_tile("#tilemap", "layer", 1, 1, 0, true, true)
    assert(res == true)
    -- Cell index out of range
    res = tilemap.set_tile("#tilemap", "layer", 1, 2, 0)
    assert(res == false)
    -- Invalid layer
    res = tilemap.set_tile("#tilemap", "not_found_layer", 0, 0, 0)
    assert(res == false)
    -- Tile index out-of-range
    ret = pcall(function() tilemap.set_tile("#tilemap", "layer", 0, 0, -1) end)
    assert(ret == false)
    ret = pcall(function() tilemap.set_tile("#tilemap", "layer", 0, 0, 5) end)
    assert(ret == false)

    -- verify hashed string works as argument to layer
    tile = tilemap.get_tile("#tilemap", "layer", 1, 1)
    assert(tile == 0)
    res = tilemap.set_tile("#tilemap", hash("layer"), 1, 1, 1)
    assert(res == true)
    tile = tilemap.get_tile("#tilemap", hash("layer"), 1, 1)
    assert(tile == 1)

    -- Set tile out-of-range. Test for previous bug
    msg.post("#tilemap", "set_tile", {layer_id = hash("layer"), position = go.get_position(), dx = 1})
    msg.post("main:/main#script", "done")
end
