#! /usr/bin/env python
import os
import Options

def configure(conf):
    pass

def build(bld):
    resource = bld.new_task_gen(features = 'cxx cstaticlib ddf',
                                includes = '. ../proto',
                                protoc_includes = '../proto',
                                proto_gen_py = True,
                                target = 'resource')
    resource.find_sources_in_dirs('.')

    if 'web' in bld.env.PLATFORM:
         resource.source.append('async/load_queue_sync.cpp');
    else:
         resource.source.append('async/load_queue_threaded.cpp');


    if 'android' in bld.env.PLATFORM:
         resource.source.append('mount/mount_android.cpp');
    elif ('darwin' in bld.env.PLATFORM) or ('linux' in bld.env.PLATFORM):
         resource.source.append('mount/mount_mmap.cpp');
    else:
         resource.source.append('mount/mount_generic.cpp');

    resource.find_sources_in_dirs('../proto')

    if not Options.options.skip_build_tests:
        bld.add_subdirs('test')

    bld.install_files('${PREFIX}/include/resource', 'resource.h')
    bld.install_files('${PREFIX}/include/resource', 'resource_archive.h')
    bld.install_files('${PREFIX}/lib/python', 'waf_resource.py')
    bld.install_files('${PREFIX}/bin', 'arcc.py')

