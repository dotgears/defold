package dmContentRepoProtocol;

//import "ddf_extensions.proto";

option java_package = "com.dynamo.cr.protocol.proto";
option java_outer_classname = "Protocol";

/*
  URI REST schemes:

  Projects:
    GET: http://host/projects/id
    GET: http://host/projects/

  Branches:
    GET, PUT, DELETE: http://host/branch/project/user/branch_name

  Merge/Update/Publish/Commit/Resolve:
    POST: http://host/branch/project/user/branch_name/commits/update
    POST: http://host/branch/project/user/branch_name/commits/commit
    POST: http://host/branch/project/user/branch_name/commits/commit_merge
    POST: http://host/branch/project/user/branch_name/commits/publish
    PUT: http://host/branch/project/user/branch_name/resolve/stage/path

  Resources:
    GET, PUT, DELETE: http://host/branch/project/user/branch_name/resources/path

  Builds:
    POST: http://host/branch/project/user/branch_name/builds
    GET: http://host/branch/project/user/branch_name/builds/build_nr
*/

// Some messages below are currently not used. See TODO

message RegisterUser
{
    required string email = 1;
    required string first_name = 2;
    optional string last_name = 3 [default = ""];
    required string password = 4;
}

enum CommandType
{
    LOGIN = 1;
}

enum Status
{
    NOT_LOGGED_IN = 1;
    OK = 0;
    FAILURE = -1;
}

message TokenExchangeInfo {
    enum Type {
        LOGIN = 1;
        SIGNUP = 2;
    }
    required string first_name = 1;
    required string last_name = 2;
    required string email = 3;
    required string login_token = 4;
    required Type type = 5;
    // Only set if type == LOGIN
    optional string auth_token = 6;
    optional int64 user_id = 7;
    optional string tracking_id = 8;
}

message LoginInfo {
    required string email = 1;
    required int64 user_id = 2;
    required string auth_token = 3;
    optional string first_name = 4;
    optional string last_name = 5;
    required string tracking_id = 6;
}

message UserInfo {
    required int64 id = 1;
    required string email = 2;
    required string first_name = 3;
    required string last_name = 4;
}

message UserInfoList {
    repeated UserInfo users = 1;
}

message NewProject {
    required string name = 1;
    optional string description = 2 [default = ""];
    optional string templateId = 3;
}

message ProjectTemplateInfo {
    required string id = 1;
    required string description = 2;
}

message ProjectTemplateInfoList {
    repeated ProjectTemplateInfo templates = 1;
}

message ProjectInfo {
    required int64 id = 1;
    required string name = 2;
    required string description = 4;
    required UserInfo owner = 5;
    repeated UserInfo members = 6;
    required int64 created = 7;
    required int64 lastUpdated = 8;
    required string repositoryUrl = 9;
    optional string iOSExecutableUrl = 10;
    optional string trackingId = 11 [default = ""];
    optional bool has_project_site = 12;
    optional ProjectType project_type = 13;
}

enum ProjectType {
    GAME = 1;
    ASSET = 2;
}

message ProjectSite {
    optional string name = 1;
    optional string description = 2;
    optional string studio_url = 3;
    optional string studio_name = 4;
    optional string cover_image_url = 5;
    optional string store_front_image_url = 6;
    optional string dev_log_url = 7;
    optional string review_url = 8;
    repeated AppStoreReference app_store_references = 9;
    repeated Screenshot screenshots = 10;
    repeated UserInfo members = 11;
    optional int64 project_id = 12;
    optional string playable_url = 13;
    optional bool is_admin = 14;
    optional string playable_image_url = 15;
    optional string library_url = 16;
    optional string attachment_url = 17;
    optional bool is_public_site = 18;
    optional bool show_name = 19;
    optional bool allow_comments = 20;
    optional string project_url = 21;
    repeated SocialMediaReference social_media_references = 22;
    optional bool liked_by_me = 23;
    optional int64 number_of_likes = 24;
    optional ProjectType project_type = 25;
    optional TagList tags = 26;
    optional License license = 27;
    optional string license_name = 28;
    optional string license_url = 29;
    optional string short_description = 30;
    optional string playable_filename = 31;
    optional int64 playable_upload_timestamp = 32;
    optional string attachment_filename = 33;
    optional int64 attachment_upload_timestamp = 34;
    optional Build build = 35;
    optional bool is_blocked = 36;
    optional string github_url = 37;
    optional bool github_readme = 38;
    optional bool github_license = 39;
    optional TagList platform_tags = 40;
    optional int64 dev_log_topic_id = 41;
    optional int64 comments_topic_id = 42;
    optional int64 owner_id = 43;

    message AppStoreReference {
        required int64 id = 1;
        required string label = 2;
        required string url = 3;
    }

    message Screenshot {
        required int64 id = 1;
        required string url = 2;
        required ScreenshotMediaType media_type = 3;
    }

    message SocialMediaReference {
        required int64 id = 1;
        required string label = 2;
        required string url = 3;
    }

    message TagList {
        repeated string tags = 1;
    }

    enum License {
        CUSTOM = 1;
        CC0_1_0_UNIVERSAL = 2;
        MIT = 3;
        GPL_3_0 = 4;
        APACHE_2_0 = 5;
    }

    message Build {
        required Status status = 1;
        required string created_by = 2;
        required int64 last_updated = 3;

        enum Status {
            STARTED = 1;
            SUCCESS = 2;
            BUILD_ERROR = 3;
            SERVER_ERROR = 4;
            NONE = 5;
        }
    }
}

message ProjectSiteTagList {
    repeated Tag tags = 1;

    message Tag {
        required string name = 1;
        required string label = 2;
        optional int64 number_of_projects = 3;
    }
}

message CreateProjectSiteRequest {
    required ProjectType project_type = 1;
}

message ProjectLikeResponse {
    required int64 number_of_likes = 1;
}

message NewAppStoreReference {
    required string label = 1;
    required string url = 2;
}

message NewScreenshot {
    required string url = 1;
    required ScreenshotMediaType media_type = 2;
}

enum ScreenshotMediaType {
    IMAGE = 1;
    YOUTUBE = 2;
    VIMEO = 3;
}

message ScreenshotSortOrderRequest {
    repeated int64 screenshot_ids = 1;
}

message NewSocialMediaReference {
    required string label = 1;
    required string url = 2;
}

message LibraryValidationResponse {
    enum Result {
        SUCCESS = 1;
        ERROR_COMMUNICATION = 2;
        ERROR_GAME_PROJECT_NOT_FOUND = 3;
        ERROR_NO_INCLUDE_DIRS = 4;
    }

    required Result result = 1;
}

message ProjectSiteAdmin {
    required int64 id = 1;
    required string name = 2;
    required string owner_email = 3;
    required ProjectType project_type = 4;
    required bool is_public_site = 5;
    required bool is_blocked = 6;
}

message ProjectSiteAdminList {
    repeated ProjectSiteAdmin sites = 1;
}

message ProjectSiteList {
    repeated ProjectSite sites = 1;
}

message ProjectInfoList {
    repeated ProjectInfo projects = 1;
}

message ProjectList {
    repeated ProjectInfo projects = 1;
}

message BranchStatus
{
    enum State
    {
        CLEAN = 0;
        DIRTY = 1;
        MERGE = 2;
    }

    message Status
    {
        // Path relative to branch root
        required string name = 1;

        // "M" => for modified
        // "U" => for unmerged
        // "A" => for added
        // "D" => for deleteted
        // "R" => for renamed
        // "C" => for copied
        required string index_status = 2;
        required string working_tree_status = 3;

        // Original name, only set if file is renamed
        optional string original = 4;
    }

    // TODO: Change to Path?
    required string name = 1;
    required State branch_state = 2;
    repeated Status file_status = 3;
    optional uint32 commits_ahead = 4 [default = 0];
    optional uint32 commits_behind = 5 [default = 0];
}

message BranchList
{
    repeated string branches = 1;
}

enum ResolveStage
{
    BASE = 1;
    YOURS = 2;
    THEIRS = 3;
}

enum ResourceType
{
    FILE = 1;
    DIRECTORY = 2;
}

message ResourceInfo
{
    required string path = 1;
    required string name = 2;
    required ResourceType type = 3;
    required int64 last_modified = 4;
    optional int32 size = 5;

    // Only valid if Type == ResourceType.DIRECTORY
    repeated string sub_resource_names = 6;
}

message CommitDesc
{
    required string id = 1;
    required string message = 2;
    optional string name = 3 [default=""];
    optional string email = 4 [default=""];
    optional string date = 5 [default=""];
}

message ResourceDesc
{
    required string path = 1;
}

message Response
{
    required Status status = 1;
    required string message = 2;
}

message CommandPayload
{
    required CommandType type = 1;
    required string login_token = 2;
    required bytes payload = 3;
}

message LoginCommand
{
    required string user_name = 1;
}

message NewBuild
{
    optional int32 dummy = 99;
}

message Log
{
    repeated CommitDesc commits = 1;
}

message SignupRequest {
    required string email = 1;
    required string password = 2;
    required string first_name = 3;
    required string last_name = 4;
}

message PasswordChangeRequest {
    required string current_password = 1;
    required string new_password = 2;
}

message PasswordResetRequest {
    required string email = 1;
    required string token = 2;
    required string new_password = 3;
}

message SignupVerificationResponse {
    required string auth = 1;
    required string email = 2;
    required string first_name = 3;
    required string last_name = 4;
    required int64 user_id = 5;
    required string tracking_id = 6;
}

message IdTokenSignInRequest
{
    required string id_token = 1;
}

message TopicChangeRequest {
    optional int64 dev_log_topic_id = 1;
    optional int64 comments_topic_id = 2;
    required string api_key = 3;
}