 [{:name "if",
   :display-string "if                                if cond then",
   :insert-string "if cond then\n\t-- do things\nend",
   :doc "",
   :tab-triggers {:select ["cond" "-- do things" "end"]}}
  {:name "else",
   :display-string "else                              else end",
   :insert-string "else\n\t-- do things\nend",
   :doc "",
   :tab-triggers {:select ["-- do things"], :exit "end"}}
  {:name "elsif",
   :display-string "elsif                             elseif cond end",
   :insert-string "elseif cond then\n\t-- do things\nend",
   :doc "",
   :tab-triggers {:select ["cond" "-- do things" "end"]}}
  {:name "while",
   :display-string "while                             while cond",
   :insert-string "while cond\n\t-- do things\nend",
   :doc "",
   :tab-triggers {:select ["cond" "-- do things"], :exit "end"}}
  {:name "repeat",
   :display-string "repeat                            repeat until cond",
   :insert-string "repeat\n\t-- do things\nuntil cond",
   :doc "",
   :tab-triggers {:select ["-- do things" "cond"]}}
  {:name "function",
   :display-string "function                          function function_name()",
   :insert-string "function function_name(self)\n\t-- do things\nend",
   :doc "",
   :tab-triggers {:select ["function_name" "self" "-- do things"]
                  :types [:name :arglist :expr]
                  :exit "end" :start "function"}}
  {:name "local",
   :display-string "local                             local name = value",
   :insert-string "local name = value",
   :doc "",
   :tab-triggers {:select ["name" "value"]
                  :types [:name :expr]}}
  {:name "for",
   :display-string "for                               for i = 1, 10",
   :insert-string "for i = 1, 10 do\n\t-- do things\nend",
   :doc "",
   :tab-triggers {:select ["i" "1" "10" "-- do things"]
                  :types [:name :expr :expr :expr]
                  :exit "end" :start "for"}}
  {:name "fori",
   :display-string "fori                              for i, v in ipairs()",
   :insert-string "for i, v in ipairs(table_name) do\n\t-- do things\nend",
   :doc "",
   :tab-triggers {:select ["i" "v" "table_name" "-- do things"]
                  :types [:name :name :expr :expr]
                  :exit "end" :start "for"}}
  {:name "forp",
   :display-string "forp                              for k, v in pairs()",
   :insert-string "for k, v in pairs(table_name) do\n\t-- do things\nend",
   :doc "",
   :tab-triggers {:select ["k" "v" "table_name" "-- do things"]
                  :types [:name :name :expr :expr]
                  :exit "end" :start "for"}}]
